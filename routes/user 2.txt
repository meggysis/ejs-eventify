// routes/user.js

const express = require('express'); 
const router = express.Router();
const User = require('../models/User');
const Listing = require('../models/Listing'); 
const ensureAuthenticated = require('../middleware/auth'); // Import the middleware
const csrf = require('csurf');
const csrfProtection = csrf();

// Profile Route (Protected)
router.get('/profile1', ensureAuthenticated, csrfProtection, async (req, res) => {
    try {
        const userId = req.session.user.id; // Retrieve user ID from session

        // Find the user in the local database
        const user = await User.findById(userId).lean();
        if (!user) {
            req.flash('error', 'User not found.');
            return res.status(404).redirect('/auth/login');
        }   

        const query = { userId };


        // Filter (category color, price) code
        //let categoris = req.query.category;
        //let color = req.query.color; 
        //let priceRange = req.query.priceRange;  

       // if (categoris && !Array.isArray(categoris)) { 
         //   categoris = [categoris]; 
        //}  
        if (req.query.category) {
            const categories = Array.isArray(req.query.category)
                ? req.query.category
                : [req.query.category];
            query.category = { $in: categories };
        }
        //let query = {userId: user._id}; 
        //if(categoris && categoris.length) { 
          //  query.category = {$in: categoris}; 
       // } 

        if (req.query.color) { 
            query.color = req.query.color; 
        } 

        if (req.query.priceRange) { 
            if(priceRange === 'under25') { 
                query.price = {$lt: 25};
            } else if (priceRange === '25-50'){ 
                query.price ={ $gte: 25, $lte: 50}; 
            } else if (priceRange === '50-75') { 
                query.price = { $gte: 50, $lte: 75}; 
            } else if (priceRange === '100plus') { 
                query.price = {$gt: 100}; 
            }
        }

        // Get listings posted by the user
        const listings = await Listing.find({ userId: user._id }).lean();

        res.render('profile1', { 
            user, 
            listings, 
            csrfToken: req.csrfToken(), 
            query: req.query
        });
    } catch (error) {
        console.error('Error retrieving profile:', error);
        req.flash('error', 'An error occurred while retrieving your profile.');
        res.redirect('/auth/login');
    }
});

// Optionally, remove or update the /profile route if not needed
router.get('/profile', ensureAuthenticated, csrfProtection, async (req, res) => {
    try {
        const userId = req.session.user.id; // Retrieve user ID from session

        // Find the user in the local database
        const user = await User.findById(userId).lean();
        if (!user) {
            req.flash('error', 'User not found.');
            return res.status(404).redirect('/auth/login');
        }

        // Get listings posted by the user
        const listings = await Listing.find({ userId: user._id }).lean();

        res.render('profile', { 
            user, 
            listings, 
            csrfToken: req.csrfToken() 
        });
    } catch (error) {
        console.error('Error retrieving profile:', error);
        req.flash('error', 'An error occurred while retrieving your profile.');
        res.redirect('/auth/login');
    }
}); 

module.exports = router; 
